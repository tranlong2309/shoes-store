#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shopgiay.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Shopgiay")]
	public partial class MydataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCover(Cover instance);
    partial void UpdateCover(Cover instance);
    partial void DeleteCover(Cover instance);
    partial void InsertCTGiay(CTGiay instance);
    partial void UpdateCTGiay(CTGiay instance);
    partial void DeleteCTGiay(CTGiay instance);
    partial void InsertDondathang(Dondathang instance);
    partial void UpdateDondathang(Dondathang instance);
    partial void DeleteDondathang(Dondathang instance);
    partial void InsertGiay(Giay instance);
    partial void UpdateGiay(Giay instance);
    partial void DeleteGiay(Giay instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    partial void InsertThuonghieu(Thuonghieu instance);
    partial void UpdateThuonghieu(Thuonghieu instance);
    partial void DeleteThuonghieu(Thuonghieu instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertAccount1(Account1 instance);
    partial void UpdateAccount1(Account1 instance);
    partial void DeleteAccount1(Account1 instance);
    partial void InsertTTLS(TTLS instance);
    partial void UpdateTTLS(TTLS instance);
    partial void DeleteTTLS(TTLS instance);
    partial void InsertHD(HD instance);
    partial void UpdateHD(HD instance);
    partial void DeleteHD(HD instance);
    #endregion
		
		public MydataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShopgiayConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cover> Covers
		{
			get
			{
				return this.GetTable<Cover>();
			}
		}
		
		public System.Data.Linq.Table<CTGiay> CTGiays
		{
			get
			{
				return this.GetTable<CTGiay>();
			}
		}
		
		public System.Data.Linq.Table<Dondathang> Dondathangs
		{
			get
			{
				return this.GetTable<Dondathang>();
			}
		}
		
		public System.Data.Linq.Table<Giay> Giays
		{
			get
			{
				return this.GetTable<Giay>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
		
		public System.Data.Linq.Table<Thuonghieu> Thuonghieus
		{
			get
			{
				return this.GetTable<Thuonghieu>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<Account1> Account1s
		{
			get
			{
				return this.GetTable<Account1>();
			}
		}
		
		public System.Data.Linq.Table<TTLS> TTLS
		{
			get
			{
				return this.GetTable<TTLS>();
			}
		}
		
		public System.Data.Linq.Table<HD> HDs
		{
			get
			{
				return this.GetTable<HD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cover")]
	public partial class Cover : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCover;
		
		private string _CoverH;
		
		private string _Cover1;
		
		private string _Cover2;
		
		private string _Cover3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCoverChanging(int value);
    partial void OnIDCoverChanged();
    partial void OnCoverHChanging(string value);
    partial void OnCoverHChanged();
    partial void OnCover1Changing(string value);
    partial void OnCover1Changed();
    partial void OnCover2Changing(string value);
    partial void OnCover2Changed();
    partial void OnCover3Changing(string value);
    partial void OnCover3Changed();
    #endregion
		
		public Cover()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCover", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCover
		{
			get
			{
				return this._IDCover;
			}
			set
			{
				if ((this._IDCover != value))
				{
					this.OnIDCoverChanging(value);
					this.SendPropertyChanging();
					this._IDCover = value;
					this.SendPropertyChanged("IDCover");
					this.OnIDCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverH", DbType="VarChar(100)")]
		public string CoverH
		{
			get
			{
				return this._CoverH;
			}
			set
			{
				if ((this._CoverH != value))
				{
					this.OnCoverHChanging(value);
					this.SendPropertyChanging();
					this._CoverH = value;
					this.SendPropertyChanged("CoverH");
					this.OnCoverHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover1", DbType="VarChar(100)")]
		public string Cover1
		{
			get
			{
				return this._Cover1;
			}
			set
			{
				if ((this._Cover1 != value))
				{
					this.OnCover1Changing(value);
					this.SendPropertyChanging();
					this._Cover1 = value;
					this.SendPropertyChanged("Cover1");
					this.OnCover1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover2", DbType="VarChar(100)")]
		public string Cover2
		{
			get
			{
				return this._Cover2;
			}
			set
			{
				if ((this._Cover2 != value))
				{
					this.OnCover2Changing(value);
					this.SendPropertyChanging();
					this._Cover2 = value;
					this.SendPropertyChanged("Cover2");
					this.OnCover2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover3", DbType="VarChar(100)")]
		public string Cover3
		{
			get
			{
				return this._Cover3;
			}
			set
			{
				if ((this._Cover3 != value))
				{
					this.OnCover3Changing(value);
					this.SendPropertyChanging();
					this._Cover3 = value;
					this.SendPropertyChanged("Cover3");
					this.OnCover3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTGiay")]
	public partial class CTGiay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGiay;
		
		private int _IDSize;
		
		private System.Nullable<int> _Soluongsize;
		
		private EntityRef<Giay> _Giay;
		
		private EntityRef<Size> _Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGiayChanging(int value);
    partial void OnIDGiayChanged();
    partial void OnIDSizeChanging(int value);
    partial void OnIDSizeChanged();
    partial void OnSoluongsizeChanging(System.Nullable<int> value);
    partial void OnSoluongsizeChanged();
    #endregion
		
		public CTGiay()
		{
			this._Giay = default(EntityRef<Giay>);
			this._Size = default(EntityRef<Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiay", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGiay
		{
			get
			{
				return this._IDGiay;
			}
			set
			{
				if ((this._IDGiay != value))
				{
					if (this._Giay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGiayChanging(value);
					this.SendPropertyChanging();
					this._IDGiay = value;
					this.SendPropertyChanged("IDGiay");
					this.OnIDGiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSize
		{
			get
			{
				return this._IDSize;
			}
			set
			{
				if ((this._IDSize != value))
				{
					if (this._Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSizeChanging(value);
					this.SendPropertyChanging();
					this._IDSize = value;
					this.SendPropertyChanged("IDSize");
					this.OnIDSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongsize", DbType="Int")]
		public System.Nullable<int> Soluongsize
		{
			get
			{
				return this._Soluongsize;
			}
			set
			{
				if ((this._Soluongsize != value))
				{
					this.OnSoluongsizeChanging(value);
					this.SendPropertyChanging();
					this._Soluongsize = value;
					this.SendPropertyChanged("Soluongsize");
					this.OnSoluongsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giay_CTGiay", Storage="_Giay", ThisKey="IDGiay", OtherKey="IDGiay", IsForeignKey=true)]
		public Giay Giay
		{
			get
			{
				return this._Giay.Entity;
			}
			set
			{
				Giay previousValue = this._Giay.Entity;
				if (((previousValue != value) 
							|| (this._Giay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Giay.Entity = null;
						previousValue.CTGiays.Remove(this);
					}
					this._Giay.Entity = value;
					if ((value != null))
					{
						value.CTGiays.Add(this);
						this._IDGiay = value.IDGiay;
					}
					else
					{
						this._IDGiay = default(int);
					}
					this.SendPropertyChanged("Giay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_CTGiay", Storage="_Size", ThisKey="IDSize", OtherKey="IDSize", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.CTGiays.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.CTGiays.Add(this);
						this._IDSize = value.IDSize;
					}
					else
					{
						this._IDSize = default(int);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dondathang")]
	public partial class Dondathang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDondathang;
		
		private System.Nullable<int> _IDKH;
		
		private System.Nullable<bool> _Dathanhtoan;
		
		private System.Nullable<bool> _Tinhtranggiaohang;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDondathangChanging(int value);
    partial void OnIDDondathangChanged();
    partial void OnIDKHChanging(System.Nullable<int> value);
    partial void OnIDKHChanged();
    partial void OnDathanhtoanChanging(System.Nullable<bool> value);
    partial void OnDathanhtoanChanged();
    partial void OnTinhtranggiaohangChanging(System.Nullable<bool> value);
    partial void OnTinhtranggiaohangChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    #endregion
		
		public Dondathang()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDondathang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDondathang
		{
			get
			{
				return this._IDDondathang;
			}
			set
			{
				if ((this._IDDondathang != value))
				{
					this.OnIDDondathangChanging(value);
					this.SendPropertyChanging();
					this._IDDondathang = value;
					this.SendPropertyChanged("IDDondathang");
					this.OnIDDondathangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", DbType="Int")]
		public System.Nullable<int> IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dathanhtoan", DbType="Bit")]
		public System.Nullable<bool> Dathanhtoan
		{
			get
			{
				return this._Dathanhtoan;
			}
			set
			{
				if ((this._Dathanhtoan != value))
				{
					this.OnDathanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Dathanhtoan = value;
					this.SendPropertyChanged("Dathanhtoan");
					this.OnDathanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtranggiaohang", DbType="Bit")]
		public System.Nullable<bool> Tinhtranggiaohang
		{
			get
			{
				return this._Tinhtranggiaohang;
			}
			set
			{
				if ((this._Tinhtranggiaohang != value))
				{
					this.OnTinhtranggiaohangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtranggiaohang = value;
					this.SendPropertyChanged("Tinhtranggiaohang");
					this.OnTinhtranggiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dondathang_CTHD", Storage="_CTHDs", ThisKey="IDDondathang", OtherKey="IDDondathang")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Dondathang", Storage="_KhachHang", ThisKey="IDKH", OtherKey="IDKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.Dondathangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.Dondathangs.Add(this);
						this._IDKH = value.IDKH;
					}
					else
					{
						this._IDKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.Dondathang = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.Dondathang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giay")]
	public partial class Giay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGiay;
		
		private int _IDThuonghieu;
		
		private string _Tengiay;
		
		private System.Nullable<decimal> _Giaban;
		
		private string _Mota;
		
		private System.Nullable<System.DateTime> _Ngaycapnhap;
		
		private System.Nullable<int> _Soluongton;
		
		private string _Cover1;
		
		private string _Cover2;
		
		private string _Cover3;
		
		private string _Cover4;
		
		private EntitySet<CTGiay> _CTGiays;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<Thuonghieu> _Thuonghieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGiayChanging(int value);
    partial void OnIDGiayChanged();
    partial void OnIDThuonghieuChanging(int value);
    partial void OnIDThuonghieuChanged();
    partial void OnTengiayChanging(string value);
    partial void OnTengiayChanged();
    partial void OnGiabanChanging(System.Nullable<decimal> value);
    partial void OnGiabanChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnNgaycapnhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaycapnhapChanged();
    partial void OnSoluongtonChanging(System.Nullable<int> value);
    partial void OnSoluongtonChanged();
    partial void OnCover1Changing(string value);
    partial void OnCover1Changed();
    partial void OnCover2Changing(string value);
    partial void OnCover2Changed();
    partial void OnCover3Changing(string value);
    partial void OnCover3Changed();
    partial void OnCover4Changing(string value);
    partial void OnCover4Changed();
    #endregion
		
		public Giay()
		{
			this._CTGiays = new EntitySet<CTGiay>(new Action<CTGiay>(this.attach_CTGiays), new Action<CTGiay>(this.detach_CTGiays));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._Thuonghieu = default(EntityRef<Thuonghieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiay", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDGiay
		{
			get
			{
				return this._IDGiay;
			}
			set
			{
				if ((this._IDGiay != value))
				{
					this.OnIDGiayChanging(value);
					this.SendPropertyChanging();
					this._IDGiay = value;
					this.SendPropertyChanged("IDGiay");
					this.OnIDGiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThuonghieu", DbType="Int NOT NULL")]
		public int IDThuonghieu
		{
			get
			{
				return this._IDThuonghieu;
			}
			set
			{
				if ((this._IDThuonghieu != value))
				{
					if (this._Thuonghieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDThuonghieuChanging(value);
					this.SendPropertyChanging();
					this._IDThuonghieu = value;
					this.SendPropertyChanged("IDThuonghieu");
					this.OnIDThuonghieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tengiay", DbType="NVarChar(100)")]
		public string Tengiay
		{
			get
			{
				return this._Tengiay;
			}
			set
			{
				if ((this._Tengiay != value))
				{
					this.OnTengiayChanging(value);
					this.SendPropertyChanging();
					this._Tengiay = value;
					this.SendPropertyChanged("Tengiay");
					this.OnTengiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giaban", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Giaban
		{
			get
			{
				return this._Giaban;
			}
			set
			{
				if ((this._Giaban != value))
				{
					this.OnGiabanChanging(value);
					this.SendPropertyChanging();
					this._Giaban = value;
					this.SendPropertyChanged("Giaban");
					this.OnGiabanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaycapnhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaycapnhap
		{
			get
			{
				return this._Ngaycapnhap;
			}
			set
			{
				if ((this._Ngaycapnhap != value))
				{
					this.OnNgaycapnhapChanging(value);
					this.SendPropertyChanging();
					this._Ngaycapnhap = value;
					this.SendPropertyChanged("Ngaycapnhap");
					this.OnNgaycapnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongton", DbType="Int")]
		public System.Nullable<int> Soluongton
		{
			get
			{
				return this._Soluongton;
			}
			set
			{
				if ((this._Soluongton != value))
				{
					this.OnSoluongtonChanging(value);
					this.SendPropertyChanging();
					this._Soluongton = value;
					this.SendPropertyChanged("Soluongton");
					this.OnSoluongtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover1", DbType="VarChar(100)")]
		public string Cover1
		{
			get
			{
				return this._Cover1;
			}
			set
			{
				if ((this._Cover1 != value))
				{
					this.OnCover1Changing(value);
					this.SendPropertyChanging();
					this._Cover1 = value;
					this.SendPropertyChanged("Cover1");
					this.OnCover1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover2", DbType="VarChar(100)")]
		public string Cover2
		{
			get
			{
				return this._Cover2;
			}
			set
			{
				if ((this._Cover2 != value))
				{
					this.OnCover2Changing(value);
					this.SendPropertyChanging();
					this._Cover2 = value;
					this.SendPropertyChanged("Cover2");
					this.OnCover2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover3", DbType="VarChar(100)")]
		public string Cover3
		{
			get
			{
				return this._Cover3;
			}
			set
			{
				if ((this._Cover3 != value))
				{
					this.OnCover3Changing(value);
					this.SendPropertyChanging();
					this._Cover3 = value;
					this.SendPropertyChanged("Cover3");
					this.OnCover3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover4", DbType="VarChar(100)")]
		public string Cover4
		{
			get
			{
				return this._Cover4;
			}
			set
			{
				if ((this._Cover4 != value))
				{
					this.OnCover4Changing(value);
					this.SendPropertyChanging();
					this._Cover4 = value;
					this.SendPropertyChanged("Cover4");
					this.OnCover4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giay_CTGiay", Storage="_CTGiays", ThisKey="IDGiay", OtherKey="IDGiay")]
		public EntitySet<CTGiay> CTGiays
		{
			get
			{
				return this._CTGiays;
			}
			set
			{
				this._CTGiays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giay_CTHD", Storage="_CTHDs", ThisKey="IDGiay", OtherKey="IDGiay")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thuonghieu_Giay", Storage="_Thuonghieu", ThisKey="IDThuonghieu", OtherKey="IDThuonghieu", IsForeignKey=true)]
		public Thuonghieu Thuonghieu
		{
			get
			{
				return this._Thuonghieu.Entity;
			}
			set
			{
				Thuonghieu previousValue = this._Thuonghieu.Entity;
				if (((previousValue != value) 
							|| (this._Thuonghieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Thuonghieu.Entity = null;
						previousValue.Giays.Remove(this);
					}
					this._Thuonghieu.Entity = value;
					if ((value != null))
					{
						value.Giays.Add(this);
						this._IDThuonghieu = value.IDThuonghieu;
					}
					else
					{
						this._IDThuonghieu = default(int);
					}
					this.SendPropertyChanged("Thuonghieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTGiays(CTGiay entity)
		{
			this.SendPropertyChanging();
			entity.Giay = this;
		}
		
		private void detach_CTGiays(CTGiay entity)
		{
			this.SendPropertyChanging();
			entity.Giay = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.Giay = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.Giay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKH;
		
		private string _TenKH;
		
		private string _DiachiKH;
		
		private string _SDTKH;
		
		private string _Email;
		
		private string _Pass;
		
		private EntitySet<Dondathang> _Dondathangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKHChanging(int value);
    partial void OnIDKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiachiKHChanging(string value);
    partial void OnDiachiKHChanged();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    #endregion
		
		public KhachHang()
		{
			this._Dondathangs = new EntitySet<Dondathang>(new Action<Dondathang>(this.attach_Dondathangs), new Action<Dondathang>(this.detach_Dondathangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKH
		{
			get
			{
				return this._IDKH;
			}
			set
			{
				if ((this._IDKH != value))
				{
					this.OnIDKHChanging(value);
					this.SendPropertyChanging();
					this._IDKH = value;
					this.SendPropertyChanged("IDKH");
					this.OnIDKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiKH", DbType="NVarChar(100)")]
		public string DiachiKH
		{
			get
			{
				return this._DiachiKH;
			}
			set
			{
				if ((this._DiachiKH != value))
				{
					this.OnDiachiKHChanging(value);
					this.SendPropertyChanging();
					this._DiachiKH = value;
					this.SendPropertyChanged("DiachiKH");
					this.OnDiachiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="NChar(10)")]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(100)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Dondathang", Storage="_Dondathangs", ThisKey="IDKH", OtherKey="IDKH")]
		public EntitySet<Dondathang> Dondathangs
		{
			get
			{
				return this._Dondathangs;
			}
			set
			{
				this._Dondathangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dondathangs(Dondathang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_Dondathangs(Dondathang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSize;
		
		private System.Nullable<double> _SizeGiay;
		
		private EntitySet<CTGiay> _CTGiays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSizeChanging(int value);
    partial void OnIDSizeChanged();
    partial void OnSizeGiayChanging(System.Nullable<double> value);
    partial void OnSizeGiayChanged();
    #endregion
		
		public Size()
		{
			this._CTGiays = new EntitySet<CTGiay>(new Action<CTGiay>(this.attach_CTGiays), new Action<CTGiay>(this.detach_CTGiays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSize", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSize
		{
			get
			{
				return this._IDSize;
			}
			set
			{
				if ((this._IDSize != value))
				{
					this.OnIDSizeChanging(value);
					this.SendPropertyChanging();
					this._IDSize = value;
					this.SendPropertyChanged("IDSize");
					this.OnIDSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeGiay", DbType="Float")]
		public System.Nullable<double> SizeGiay
		{
			get
			{
				return this._SizeGiay;
			}
			set
			{
				if ((this._SizeGiay != value))
				{
					this.OnSizeGiayChanging(value);
					this.SendPropertyChanging();
					this._SizeGiay = value;
					this.SendPropertyChanged("SizeGiay");
					this.OnSizeGiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_CTGiay", Storage="_CTGiays", ThisKey="IDSize", OtherKey="IDSize")]
		public EntitySet<CTGiay> CTGiays
		{
			get
			{
				return this._CTGiays;
			}
			set
			{
				this._CTGiays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTGiays(CTGiay entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_CTGiays(CTGiay entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thuonghieu")]
	public partial class Thuonghieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThuonghieu;
		
		private string _TenThuonghieu;
		
		private EntitySet<Giay> _Giays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThuonghieuChanging(int value);
    partial void OnIDThuonghieuChanged();
    partial void OnTenThuonghieuChanging(string value);
    partial void OnTenThuonghieuChanged();
    #endregion
		
		public Thuonghieu()
		{
			this._Giays = new EntitySet<Giay>(new Action<Giay>(this.attach_Giays), new Action<Giay>(this.detach_Giays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThuonghieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDThuonghieu
		{
			get
			{
				return this._IDThuonghieu;
			}
			set
			{
				if ((this._IDThuonghieu != value))
				{
					this.OnIDThuonghieuChanging(value);
					this.SendPropertyChanging();
					this._IDThuonghieu = value;
					this.SendPropertyChanged("IDThuonghieu");
					this.OnIDThuonghieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuonghieu", DbType="NVarChar(50)")]
		public string TenThuonghieu
		{
			get
			{
				return this._TenThuonghieu;
			}
			set
			{
				if ((this._TenThuonghieu != value))
				{
					this.OnTenThuonghieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuonghieu = value;
					this.SendPropertyChanged("TenThuonghieu");
					this.OnTenThuonghieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thuonghieu_Giay", Storage="_Giays", ThisKey="IDThuonghieu", OtherKey="IDThuonghieu")]
		public EntitySet<Giay> Giays
		{
			get
			{
				return this._Giays;
			}
			set
			{
				this._Giays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Giays(Giay entity)
		{
			this.SendPropertyChanging();
			entity.Thuonghieu = this;
		}
		
		private void detach_Giays(Giay entity)
		{
			this.SendPropertyChanging();
			entity.Thuonghieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDondathang;
		
		private int _IDGiay;
		
		private double _Size;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<decimal> _Dongia;
		
		private EntityRef<Dondathang> _Dondathang;
		
		private EntityRef<Giay> _Giay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDondathangChanging(int value);
    partial void OnIDDondathangChanged();
    partial void OnIDGiayChanging(int value);
    partial void OnIDGiayChanged();
    partial void OnSizeChanging(double value);
    partial void OnSizeChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnDongiaChanging(System.Nullable<decimal> value);
    partial void OnDongiaChanged();
    #endregion
		
		public CTHD()
		{
			this._Dondathang = default(EntityRef<Dondathang>);
			this._Giay = default(EntityRef<Giay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDondathang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDondathang
		{
			get
			{
				return this._IDDondathang;
			}
			set
			{
				if ((this._IDDondathang != value))
				{
					if (this._Dondathang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDondathangChanging(value);
					this.SendPropertyChanging();
					this._IDDondathang = value;
					this.SendPropertyChanged("IDDondathang");
					this.OnIDDondathangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiay", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGiay
		{
			get
			{
				return this._IDGiay;
			}
			set
			{
				if ((this._IDGiay != value))
				{
					if (this._Giay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGiayChanging(value);
					this.SendPropertyChanging();
					this._IDGiay = value;
					this.SendPropertyChanged("IDGiay");
					this.OnIDGiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dondathang_CTHD", Storage="_Dondathang", ThisKey="IDDondathang", OtherKey="IDDondathang", IsForeignKey=true)]
		public Dondathang Dondathang
		{
			get
			{
				return this._Dondathang.Entity;
			}
			set
			{
				Dondathang previousValue = this._Dondathang.Entity;
				if (((previousValue != value) 
							|| (this._Dondathang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dondathang.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._Dondathang.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._IDDondathang = value.IDDondathang;
					}
					else
					{
						this._IDDondathang = default(int);
					}
					this.SendPropertyChanged("Dondathang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giay_CTHD", Storage="_Giay", ThisKey="IDGiay", OtherKey="IDGiay", IsForeignKey=true)]
		public Giay Giay
		{
			get
			{
				return this._Giay.Entity;
			}
			set
			{
				Giay previousValue = this._Giay.Entity;
				if (((previousValue != value) 
							|| (this._Giay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Giay.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._Giay.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._IDGiay = value.IDGiay;
					}
					else
					{
						this._IDGiay = default(int);
					}
					this.SendPropertyChanged("Giay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account1")]
	public partial class Account1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Email;
		
		private string _Pass;
		
		private string _HoTen;
		
		private System.Nullable<int> _Follow;
		
		private EntitySet<TTLS> _TTLS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnFollowChanging(System.Nullable<int> value);
    partial void OnFollowChanged();
    #endregion
		
		public Account1()
		{
			this._TTLS = new EntitySet<TTLS>(new Action<TTLS>(this.attach_TTLS), new Action<TTLS>(this.detach_TTLS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(250)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Follow", DbType="Int")]
		public System.Nullable<int> Follow
		{
			get
			{
				return this._Follow;
			}
			set
			{
				if ((this._Follow != value))
				{
					this.OnFollowChanging(value);
					this.SendPropertyChanging();
					this._Follow = value;
					this.SendPropertyChanged("Follow");
					this.OnFollowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account1_TTLS", Storage="_TTLS", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TTLS> TTLS
		{
			get
			{
				return this._TTLS;
			}
			set
			{
				this._TTLS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTLS(TTLS entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = this;
		}
		
		private void detach_TTLS(TTLS entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTLS")]
	public partial class TTLS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ActionID;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntityRef<Account1> _Account1;
		
		private EntityRef<HD> _HD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnActionIDChanging(System.Nullable<int> value);
    partial void OnActionIDChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    #endregion
		
		public TTLS()
		{
			this._Account1 = default(EntityRef<Account1>);
			this._HD = default(EntityRef<HD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int")]
		public System.Nullable<int> ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._HD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account1_TTLS", Storage="_Account1", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Account1 Account1
		{
			get
			{
				return this._Account1.Entity;
			}
			set
			{
				Account1 previousValue = this._Account1.Entity;
				if (((previousValue != value) 
							|| (this._Account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account1.Entity = null;
						previousValue.TTLS.Remove(this);
					}
					this._Account1.Entity = value;
					if ((value != null))
					{
						value.TTLS.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_TTLS", Storage="_HD", ThisKey="ActionID", OtherKey="ActionID", IsForeignKey=true)]
		public HD HD
		{
			get
			{
				return this._HD.Entity;
			}
			set
			{
				HD previousValue = this._HD.Entity;
				if (((previousValue != value) 
							|| (this._HD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HD.Entity = null;
						previousValue.TTLS.Remove(this);
					}
					this._HD.Entity = value;
					if ((value != null))
					{
						value.TTLS.Add(this);
						this._ActionID = value.ActionID;
					}
					else
					{
						this._ActionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HD")]
	public partial class HD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionID;
		
		private string _Name;
		
		private EntitySet<TTLS> _TTLS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public HD()
		{
			this._TTLS = new EntitySet<TTLS>(new Action<TTLS>(this.attach_TTLS), new Action<TTLS>(this.detach_TTLS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_TTLS", Storage="_TTLS", ThisKey="ActionID", OtherKey="ActionID")]
		public EntitySet<TTLS> TTLS
		{
			get
			{
				return this._TTLS;
			}
			set
			{
				this._TTLS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTLS(TTLS entity)
		{
			this.SendPropertyChanging();
			entity.HD = this;
		}
		
		private void detach_TTLS(TTLS entity)
		{
			this.SendPropertyChanging();
			entity.HD = null;
		}
	}
}
#pragma warning restore 1591
